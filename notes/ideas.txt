
maybe all apps should be containorized in a way, meaning that they specifically are stipened resources in specific formats.
and resources should be represented as special objects in the registry,
with metadata on the application itself which will also be registered in the registry and the objects it's allowed by the X layer

a core c++ library?

maybe there should be an adapters system for making wrappers between v layer libs and x layer

there should be a node instatiation concept,
because not everything should necessarily fit into the GEMx schema,
just in order to displace existing corporatist solutions,
and potentially operations should be dispersed accross machines in a way
allowing for optimisation and necessity,
for example constricted clients such as mobile phones can have the server to some
heavy lifting where GEMx infrastructure is required but the client can have have
an optimal quantity of processing and memory done by it

perhaps there should be seperate specifications for different device and container system types
1. a realtime spec for edge integration with modern mid-range microcontrollers
2. an embedded spec for devices capable of embedded Linux
# note both of these are potentially in the IoT umbrella
3. a mobile spec for devices running mobile operating systems such as iOS, Android, Chrome OS and gaming OS's
4. a full spec for PC-type devices (laptops, desktops and workstations)
5. a super computer spec
# note there are considerations for non-graphic server environments and regarding a node-based architecture
or there could be a more fine grained system for query'ing features and adjusting at runtime



